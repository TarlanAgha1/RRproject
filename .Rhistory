install.packages("reticulate")
library(reticulate)
ucimlrepo <- import("ucimlrepo")  # Import the Python module
ucimlrepo <- import("ucimlrepo")  # Import the Python module
ucimlrepo <- import("ucimlrepo")  # Import the Python module
ucimlrepo <- import("ucimlrepo")  # Import the Python module
url<-"https://raw.githubusercontent.com/WojciechMisiura/RRproject/main/bank.csv"
data<-read_csv(url)
install.packages("remotes")
library(remotes)
packages_version <- c(
"readr" = "2.1.4",
"dplyr" = "1.1.2",
"ggplot2" = "3.4.2",
)
url<-"https://raw.githubusercontent.com/WojciechMisiura/RRproject/main/bank.csv"
data<-read_csv(url)
install.packages("remotes")
library(remotes)
packages_version <- c(
"readr" = "2.1.4",
"dplyr" = "1.1.2",
"ggplot2" = "3.4.2",
)
install.packages("remotes")
install.packages("remotes")
library(remotes)
packages_version <- c(
"readr" = "2.1.4",
"dplyr" = "1.1.2",
"ggplot2" = "3.4.2",
)
install.packages("remotes")
library(remotes)
packages_version <- c(
"readr" = "2.1.4",
"dplyr" = "1.1.2",
"ggplot2" = "3.4.2"
)
check_and_install <- function(package, version) {
if (!require(package, character.only = TRUE)) {
package_version_install <- paste0(package, "@", version)
remotes::install_version(package_version_install)
}
}
mapply(check_and_install, names(packages_version), packages_version)
install.packages("remotes")
install.packages("remotes")
library(remotes)
packages_version <- c(
"readr" = "2.1.4",
"dplyr" = "1.1.2",
"ggplot2" = "3.4.2"
)
check_and_install <- function(package, version) {
if (!require(package, character.only = TRUE)) {
package_version_install <- paste0(package, "@", version)
remotes::install_version(package_version_install)
}
}
mapply(check_and_install, names(packages_version), packages_version)
url<-"https://raw.githubusercontent.com/WojciechMisiura/RRproject/main/bank.csv"
data<-read_csv(url)
install.packages("ggplot2")
install.packages("ggplot2")
package_version("ggplot2")
package_version("ggplot2")
library("ggplot2")
package_version("ggplot2")
package_version(ggplot2)
package_version("ggplot2")
package_version("ggplot2, strict=TRUE")
installed.packages("ggplot2")
sessionInfo()
library("ggplot2")
sessionInfo()
bank %>% summarize(across(everything(), ~sum(is.na(.))))
install.packages("remotes")
library(remotes)
packages_version <- c(
"readr" = "2.1.4",
"dplyr" = "1.1.2",
"ggplot2" = "3.4.2"
)
check_and_install <- function(package, version) {
if (!require(package, character.only = TRUE)) {
package_version_install <- paste0(package, "@", version)
remotes::install_version(package_version_install)
}
}
mapply(check_and_install, names(packages_version), packages_version)
sessionInfo()
bank %>% summarize(across(everything(), ~sum(is.na(.))))
url<-"https://raw.githubusercontent.com/WojciechMisiura/RRproject/main/bank.csv"
bank<-read_csv(url)
bank %>% summarize(across(everything(), ~sum(is.na(.))))
summary(bank)
ggplot(bank, aes(y = age)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot for 'age'")
ggplot(bank, aes(x = age)) +
geom_histogram(bins = 100, fill = "blue", color = "black") +
labs(title = "Distribution of Age") +
theme_minimal()
ggplot(bank, aes(y = duration)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot for 'duration'")
ggplot(bank, aes(x = duration)) +
geom_histogram(bins = 100, fill = "blue", color = "black") +
labs(title = "Distribution of Duration") +
theme_minimal()
bank_data <- bank
jobs <- c('management', 'blue-collar', 'technician', 'admin.', 'services',
'retired', 'self-employed', 'student', 'unemployed', 'entrepreneur',
'housemaid', 'unknown')
for (j in jobs) {
count <- sum(bank_data$deposit == "yes" & bank_data$job == j)
cat(sprintf("%-15s : %5d\n", j, count))
jobs <- c('management', 'blue-collar', 'technician', 'admin.', 'services',
'retired', 'self-employed', 'student', 'unemployed', 'entrepreneur',
'housemaid', 'unknown')
for (j in jobs) {
count <- sum(bank_data$deposit == "yes" & bank_data$job == j)
cat(sprintf("%-15s : %5d\n", j, count))}
table(bank_data$job)
bank_data$job[bank_data$job %in% c('management', 'admin.')] <- 'white-collar'
bank_data$job[bank_data$job %in% c('services', 'housemaid')] <- 'pink-collar'
bank_data$job[bank_data$job %in% c('retired', 'student', 'unemployed', 'unknown')] <- 'other'
table(bank_data$job)
bank_data$poutcome <- as.character(bank_data$poutcome)
bank_data$poutcome[bank_data$poutcome == "other"] <- "unknown"
table(bank_data$poutcome)
Dropping the contact Column:
bank_data$poutcome <- as.character(bank_data$poutcome)
bank_data$poutcome[bank_data$poutcome == "other"] <- "unknown"
table(bank_data$poutcome)
bank_data <- select(bank_data, -contact)
bank_data$default_cat <- as.integer(bank_data$default == "yes")
bank_data$housing_cat <- as.integer(bank_data$housing == "yes")
bank_data$loan_cat <- as.integer(bank_data$loan == "yes")
bank_data <- select(bank_data, -c(default, housing, loan))
bank_data <- select(bank_data, -c(month, day))
bank_data$deposit_cat <- as.integer(bank_data$deposit == "yes")
bank_data <- select(bank_data, -deposit)
cat("Customers that have not been contacted before:", sum(bank_data$pdays == -1), "\n")
cat("Maximum values on pdays:", max(bank_data$pdays), "\n")
bank_data$pdays[bank_data$pdays == -1] <- 10000
bank_data$recent_pdays <- ifelse(bank_data$pdays > 0, 1/bank_data$pdays, 1/bank_data$pdays)
bank_data <- select(bank_data, -pdays)
cat("Customers that have not been contacted before:", sum(bank_data$pdays == -1), "\n")
cat("Maximum values on pdays:", max(bank_data$pdays), "\n")
bank_data$pdays[bank_data$pdays == -1] <- 10000
cat("Customers that have not been contacted before:", sum(bank_data$pdays == -1), "\n")
cat("Maximum values on pdays:", max(bank_data$pdays), "\n")
bank_data$pdays[bank_data$pdays == -1] <- 10000
bank_data <- bank
cat("Customers that have not been contacted before:", sum(bank_data$pdays == -1), "\n")
cat("Maximum values on pdays:", max(bank_data$pdays), "\n")
bank_data$pdays[bank_data$pdays == -1] <- 10000
bank_data$recent_pdays <- ifelse(bank_data$pdays > 0, 1/bank_data$pdays, 1/bank_data$pdays)
bank_data <- select(bank_data, -pdays)
tail(bank_data)
install.packages("fastDummies")
library('fastDummies')
sessionInfo()
bank_with_dummies <- dummy_cols(bank_data, select_columns = c('job', 'marital', 'education', 'poutcome'),
remove_selected_columns = TRUE)
head(bank_with_dummies)
print(dim(bank_with_dummies))
summary(bank_with_dummies)
ggplot(bank_with_dummies, aes(x = age, y = balance)) +
geom_point(alpha = 0.5) +
labs(title = "Scatterplot of Age vs. Balance",
subtitle = "Across all ages, majority of people have savings of less than 20000",
x = "Age", y = "Balance") +
theme_minimal()
ggplot(bank_with_dummies, aes(x = duration)) +
geom_histogram(data = subset(bank_with_dummies, poutcome_success == 1), fill = "blue", bins = 30) +
labs(title = "Histogram of Duration for 'poutcome_success'",
x = "Duration", y = "Count") +
theme_minimal()
